local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=0;local F;local G;local H;local I;local J;local K;local L;local M;local N;local O;local P;local Q;while true do if E==4 then O=nil;function O(...)return{...},y("#",...)end;P=nil;function P()local R=0;local S;local T;local U;local V;local W;local X;while true do if R==0 then S={}T={}U={}R=1 end;if R==1 then V={S,T,nil,U}W=K()X={}R=2 end;if R==2 then for Y=1,W do local Z=0;local _;local a0;while true do if Z==1 then if _==1 then a0=I()~=0 elseif _==2 then a0=L()elseif _==3 then a0=M()end;X[Y]=a0;break end;if Z==0 then _=I()a0=nil;Z=1 end end end;V[3]=I()for a1=1,K()do local a2=0;local a3;while true do if a2==0 then a3=I()if H(a3,1,1)==0 then local a4=0;local a5;local a6;local a7;while true do if a4==2 then if H(a6,1,1)==1 then a7[2]=X[a7[2]]end;if H(a6,2,1272-(226+1044))==4-3 then a7[3]=X[a7[3]]end;a4=3 end;if a4==0 then a5=H(a3,2,1640-(1523+114))a6=H(a3,4+0,6)a4=1 end;if 3==a4 then if H(a6,3,3)==118-(32+85)then a7[4]=X[a7[4]]end;S[a1]=a7;break end;if a4==1 then a7={J(),J(),nil,nil}if a5==0 then local a8=0;while true do if 0==a8 then a7[3]=J()a7[4]=J()break end end elseif a5==1 then a7[3]=K()elseif a5==2 then a7[3]=K()-2^16 elseif a5==3 then a7[3]=K()-2^(1081-(68+997))a7[4]=J()end;a4=2 end end end;break end end end;R=3 end;if R==3 then for a9=1,K()do T[a9-1]=P()end;return V end end end;E=5 end;if E==1 then function H(aa,ab,ac)if ac then local ad=0;local ae;while true do if ad==0 then ae=aa/2^(ab-1)%2^(ac-1-(ab-1)+1)return ae-ae%1 end end else local af=0;local ag;while true do if af==0 then ag=2^(ab-1)return aa%(ag+ag)>=ag and 1 or 0 end end end end;I=nil;function I()local ah=0;local ai;while true do if ah==1 then return ai end;if 0==ah then ai=n(C,F,F)F=F+1;ah=1 end end end;J=nil;E=2 end;if 2==E then function J()local aj,ak=n(C,F,F+3-1)F=F+2;return ak*256+aj end;K=nil;function K()local al=0;local am;local an;local ao;local ap;while true do if al==0 then am,an,ao,ap=n(C,F,F+7-4)F=F+4;al=1 end;if 1==al then return ap*16777216+ao*65536+an*(875-(555+64))+am end end end;L=nil;E=3 end;if E==5 then Q=nil;function Q(aq,ar,as)local at=0;local au;local av;local aw;while true do if at==1 then aw=aq[3]return function(...)local ax=au;local ay=av;local az=aw;local aA=O;local aB=1;local aC=-1;local aD={}local aE={...}local aF=y("#",...)-1;local aG={}local aH={}for aI=0,aF do if aI>=az then aD[aI-az]=aE[aI+1]else aH[aI]=aE[aI+1]end end;local aJ=aF-az+1;local aK;local aL;while true do local aM=0;while true do if aM==1 then if aL<=45+0 then if aL<=22 then if aL<=10 then if aL<=4 then if aL<=1 then if aL==0 then aH[aK[2]]=aK[3]else aH[aK[2]]=aH[aK[3]]%aH[aK[4]]end elseif aL<=1+1 then aH[aK[959-(892+65)]]=aH[aK[3]]%aH[aK[4]]elseif aL==3 then local aN=aK[2]aH[aN]=aH[aN](z(aH,aN+1,aC))else local aO=0;local aP;local aQ;while true do if 0==aO then aP=aK[2]aQ=aH[aK[3]]aO=1 end;if 1==aO then aH[aP+1]=aQ;aH[aP]=aQ[aK[4]]break end end end elseif aL<=7 then if aL<=11-6 then if aH[aK[2]]==aK[4]then aB=aB+1 else aB=aK[3]end elseif aL==6 then do return end else local aR=aK[3-1]aH[aR]=aH[aR](z(aH,aR+1,aK[3]))end elseif aL<=8 then local aS=aK[2]local aT=aK[4]local aU=aS+2;local aV={aH[aS](aH[aS+1-0],aH[aU])}for aW=1,aT do aH[aU+aW]=aV[aW]end;local aX=aV[1]if aX then local aY=0;while true do if aY==0 then aH[aU]=aX;aB=aK[3]break end end else aB=aB+1 end elseif aL>359-(87+263)then do return end elseif not aH[aK[2]]then aB=aB+1 else aB=aK[3]end elseif aL<=16 then if aL<=13 then if aL<=11 then aH[aK[2]]={}elseif aL>12 then aH[aK[2]]=aH[aK[183-(67+113)]][aK[4]]elseif aK[2]==aH[aK[4]]then aB=aB+1 else aB=aK[3]end elseif aL<=14 then local aZ=0;local a_;while true do if aZ==0 then a_=aK[2]aH[a_](z(aH,a_+1,aC))break end end elseif aL==15 then aH[aK[2]]=aH[aK[3]]%aK[4]else local b0=0;local b1;while true do if b0==0 then b1=aK[2]aH[b1](z(aH,b1+1,aK[3]))break end end end elseif aL<=19 then if aL<=17 then local b2=0;local b3;while true do if b2==0 then b3=aK[2]aH[b3]=aH[b3](z(aH,b3+1,aC))break end end elseif aL>18 then if aH[aK[2]]then aB=aB+1 else aB=aK[3]end else local b4=0;local b5;local b6;local b7;local b8;while true do if 0==b4 then b5=aK[2]b6,b7=aA(aH[b5](aH[b5+1]))b4=1 end;if b4==1 then aC=b7+b5-1;b8=0;b4=2 end;if b4==2 then for b9=b5,aC do b8=b8+1;aH[b9]=b6[b8]end;break end end end elseif aL<=20 then local ba=aK[2]aH[ba]=aH[ba]()elseif aL>21 then if aH[aK[2]]then aB=aB+1 else aB=aK[3]end else local bb=0;local bc;local bd;while true do if 0==bb then bc=aK[2]bd=aH[bc]bb=1 end;if bb==1 then for be=bc+1,aC do t(bd,aH[be])end;break end end end elseif aL<=33 then if aL<=27 then if aL<=24 then if aL>23 then local bf=0;local bg;local bh;local bi;local bj;while true do if bf==1 then aC=bi+bg-1;bj=0;bf=2 end;if bf==0 then bg=aK[2+0]bh,bi=aA(aH[bg](z(aH,bg+1,aC)))bf=1 end;if bf==2 then for bk=bg,aC do bj=bj+1;aH[bk]=bh[bj]end;break end end else local bl=0;local bm;local bn;local bo;while true do if bl==0 then bm=aK[2]bn=aH[bm]bl=1 end;if 1==bl then bo=aH[bm+2]if bo>0 then if bn>aH[bm+1]then aB=aK[3]else aH[bm+3]=bn end elseif bn<aH[bm+1]then aB=aK[3]else aH[bm+3]=bn end;break end end end elseif aL<=25 then aH[aK[4-2]]=aK[3]+aH[aK[4]]elseif aL>26 then local bp=0;local bq;while true do if bp==0 then bq=aK[2]do return z(aH,bq,aC)end;break end end else local br=0;local bs;local bt;local bu;while true do if br==0 then bs=aK[2]bt={aH[bs](z(aH,bs+1,aC))}br=1 end;if br==1 then bu=0+0;for bv=bs,aK[4]do local bw=0;while true do if bw==0 then bu=bu+3-2;aH[bv]=bt[bu]break end end end;break end end end elseif aL<=30 then if aL<=28 then do return aH[aK[954-(802+150)]]()end elseif aL==29 then aH[aK[2]]=aH[aK[3]]+aK[4]else aH[aK[2]]=aK[3]+aH[aK[10-6]]end elseif aL<=55-24 then aH[aK[2]][aK[3]]=aK[4]elseif aL==32 then aH[aK[2]]=aH[aK[3]]+aK[4]else aH[aK[2+0]]=aK[1000-(915+82)]end elseif aL<=39 then if aL<=36 then if aL<=34 then aB=aK[3]elseif aL>35 then aH[aK[2]]=as[aK[3]]else aH[aK[2]]={}end elseif aL<=37 then if aK[2]==aH[aK[4]]then aB=aB+1 else aB=aK[3]end elseif aL==38 then aH[aK[2]][aK[3]]=aH[aK[11-7]]else aH[aK[2]]=aH[aK[3]]end elseif aL<=42 then if aL<=40 then if aH[aK[2+0]]==aH[aK[4]]then aB=aB+1 else aB=aK[3]end elseif aL==41 then local bx=0;local by;local bz;local bA;while true do if bx==1 then bA=aH[by+2]if bA>0 then if bz>aH[by+1]then aB=aK[3]else aH[by+3-0]=bz end elseif bz<aH[by+1188-(1069+118)]then aB=aK[3]else aH[by+3]=bz end;break end;if bx==0 then by=aK[2]bz=aH[by]bx=1 end end else local bB=0;local bC;while true do if bB==0 then bC=aK[2]aH[bC]=aH[bC](aH[bC+1])break end end end elseif aL<=43 then if aH[aK[2]]==aK[4]then aB=aB+1 else aB=aK[3]end elseif aL>44 then local bD=0;local bE;local bF;while true do if bD==0 then bE=aK[2]bF=aH[aK[3]]bD=1 end;if bD==1 then aH[bE+1]=bF;aH[bE]=bF[aK[4]]break end end else local bG=aK[2]local bH=aH[bG]for bI=bG+1,aC do t(bH,aH[bI])end end elseif aL<=153-85 then if aL<=56 then if aL<=50 then if aL<=47 then if aL==100-54 then aH[aK[2]][aK[3]]=aK[1+3]else aH[aK[2]]=ar[aK[3]]end elseif aL<=48 then local bJ=aK[2]local bK,bL=aA(aH[bJ](aH[bJ+1]))aC=bL+bJ-1;local bM=0;for bN=bJ,aC do local bO=0;while true do if bO==0 then bM=bM+1;aH[bN]=bK[bM]break end end end elseif aL==49 then for bP=aK[3-1],aK[3+0]do aH[bP]=nil end else local bQ=0;local bR;local bS;local bT;local bU;while true do if bQ==2 then for bV=bR,aC do local bW=0;while true do if bW==0 then bU=bU+1;aH[bV]=bS[bU]break end end end;break end;if bQ==1 then aC=bT+bR-1;bU=0;bQ=2 end;if bQ==0 then bR=aK[2]bS,bT=aA(aH[bR](z(aH,bR+1,aC)))bQ=1 end end end elseif aL<=844-(368+423)then if aL<=51 then aH[aK[2]]=aH[aK[9-6]]elseif aL==52 then aH[aK[2]][aH[aK[3]]]=aK[22-(10+8)]else local bX=aK[7-5]local bY,bZ=aA(aH[bX](z(aH,bX+1,aK[3])))aC=bZ+bX-1;local b_=0;for c0=bX,aC do local c1=0;while true do if c1==0 then b_=b_+443-(416+26)aH[c0]=bY[b_]break end end end end elseif aL<=54 then aB=aK[3]elseif aL==55 then local c2=0;local c3;while true do if c2==0 then c3=aK[2]do return aH[c3](z(aH,c3+1,aK[3]))end;break end end else local c4=0;local c5;local c6;local c7;while true do if c4==2 then for c8=1,aK[4]do local c9=0;local ca;while true do if 1==c9 then if ca[1]==51 then c7[c8-1]={aH,ca[3]}else c7[c8-1]={ar,ca[2+1]}end;aG[#aG+1]=c7;break end;if c9==0 then aB=aB+1;ca=ax[aB]c9=1 end end end;aH[aK[2]]=Q(c5,c6,as)break end;if 0==c4 then c5=ay[aK[3]]c6=nil;c4=1 end;if c4==1 then c7={}c6=w({},{[h("\54\152\95\179\224\18\213","\98\105\199\54\221\132\119\173")]=function(cb,cc)local cd=0;local ce;while true do if cd==0 then ce=c7[cc]return ce[1][ce[2]]end end end,[h("\51\188\47\7\34\228\206\189\9\155","\217\108\227\65\98\85\141\160")]=function(cf,cg,ch)local ci=0;local cj;while true do if ci==0 then cj=c7[cg]cj[1][cj[2]]=ch;break end end end})c4=2 end end end elseif aL<=62 then if aL<=59 then if aL<=57 then local ck=0;local cl;local cm;local cn;local co;while true do if ck==0 then cl=aK[2]cm,cn=aA(aH[cl](z(aH,cl+1,aK[3])))ck=1 end;if ck==2 then for cp=cl,aC do co=co+1;aH[cp]=cm[co]end;break end;if ck==1 then aC=cn+cl-1;co=0;ck=2 end end elseif aL>58 then if not aH[aK[2]]then aB=aB+1 else aB=aK[4-1]end else local cq=0;local cr;local cs;local ct;while true do if 1==cq then ct=438-(145+293)for cu=cr,aK[4]do local cv=0;while true do if cv==0 then ct=ct+1;aH[cu]=cs[ct]break end end end;break end;if cq==0 then cr=aK[2]cs={aH[cr](aH[cr+1])}cq=1 end end end elseif aL<=60 then aH[aK[2]]=Q(ay[aK[3]],nil,as)elseif aL>61 then aH[aK[2]][aH[aK[3]]]=aH[aK[4]]else local cw=aK[432-(44+386)]local cx=aK[1490-(998+488)]local cy=cw+2;local cz={aH[cw](aH[cw+1],aH[cy])}for cA=1,cx do aH[cy+cA]=cz[cA]end;local cB=cz[1+0]if cB then local cC=0;while true do if cC==0 then aH[cy]=cB;aB=aK[3]break end end else aB=aB+1+0 end end elseif aL<=65 then if aL<=835-(201+571)then local cD=aK[2]local cE={aH[cD](z(aH,cD+1,aC))}local cF=0;for cG=cD,aK[4]do cF=cF+1;aH[cG]=cE[cF]end elseif aL>1202-(116+1022)then local cH=0;local cI;local cJ;local cK;while true do if cH==1 then cK=aH[cI]+cJ;aH[cI]=cK;cH=2 end;if cH==2 then if cJ>0 then if cK<=aH[cI+1]then local cL=0;while true do if 0==cL then aB=aK[12-9]aH[cI+3]=cK;break end end end elseif cK>=aH[cI+1]then aB=aK[3]aH[cI+3]=cK end;break end;if cH==0 then cI=aK[2]cJ=aH[cI+2]cH=1 end end else aH[aK[2]]=#aH[aK[3]]end elseif aL<=66 then local cM=aK[2]aH[cM](aH[cM+1+0])elseif aL==67 then local cN=0;local cO;local cP;local cQ;while true do if 1==cN then cQ={}cP=w({},{[h("\202\218\37\48\199\240\253","\163\149\133\76\94")]=function(cR,cS)local cT=0;local cU;while true do if cT==0 then cU=cQ[cS]return cU[1][cU[7-5]]end end end,[h("\159\50\33\35\226\61\216\164\8\55","\182\192\109\79\70\149\84")]=function(cV,cW,cX)local cY=0;local cZ;while true do if 0==cY then cZ=cQ[cW]cZ[1][cZ[2]]=cX;break end end end})cN=2 end;if cN==2 then for c_=1,aK[14-10]do local d0=0;local d1;while true do if d0==0 then aB=aB+860-(814+45)d1=ax[aB]d0=1 end;if d0==1 then if d1[1]==51 then cQ[c_-(2-1)]={aH,d1[3]}else cQ[c_-1]={ar,d1[3]}end;aG[#aG+1+0]=cQ;break end end end;aH[aK[2]]=Q(cO,cP,as)break end;if cN==0 then cO=ay[aK[3]]cP=nil;cN=1 end end else for d2=aK[2],aK[2+1]do aH[d2]=nil end end elseif aL<=79 then if aL<=73 then if aL<=70 then if aL>954-(261+624)then local d3=0;local d4;while true do if d3==0 then d4=aK[2]aH[d4]=aH[d4]()break end end else aH[aK[3-1]][aH[aK[3]]]=aK[4]end elseif aL<=71 then aH[aK[2]]=Q(ay[aK[3]],nil,as)elseif aL==72 then aH[aK[2]]=#aH[aK[3]]else local d5=0;local d6;while true do if d5==0 then d6=aK[2]aH[d6]=aH[d6](z(aH,d6+1081-(1020+60),aK[3]))break end end end elseif aL<=76 then if aL<=1497-(630+793)then if aH[aK[6-4]]==aH[aK[4]]then aB=aB+1 else aB=aK[3]end elseif aL==75 then local d7=aK[2]local d8={aH[d7](aH[d7+1])}local d9=0;for da=d7,aK[4]do local db=0;while true do if db==0 then d9=d9+1;aH[da]=d8[d9]break end end end else local dc=0;local dd;while true do if dc==0 then dd=aK[2]do return z(aH,dd,aC)end;break end end end elseif aL<=77 then local de=0;local df;while true do if de==0 then df=aK[2]aH[df](z(aH,df+1,aC))break end end elseif aL>78 then local dg=aK[9-7]do return aH[dg](z(aH,dg+1,aK[3]))end else aH[aK[2]]=aH[aK[3]][aK[2+2]]end elseif aL<=85 then if aL<=82 then if aL<=80 then aH[aK[2]]=aH[aK[9-6]]%aK[4]elseif aL>81 then local dh=0;local di;local dj;local dk;while true do if 2==dh then if dj>0 then if dk<=aH[di+1]then aB=aK[3]aH[di+3]=dk end elseif dk>=aH[di+1748-(760+987)]then aB=aK[3]aH[di+3]=dk end;break end;if dh==0 then di=aK[2]dj=aH[di+2]dh=1 end;if dh==1 then dk=aH[di]+dj;aH[di]=dk;dh=2 end end else aH[aK[2]][aK[3]]=aH[aK[4]]end elseif aL<=83 then do return aH[aK[2]]()end elseif aL==84 then aH[aK[2]]()else local dl=0;local dm;while true do if dl==0 then dm=aK[2]aH[dm](z(aH,dm+1,aK[3]))break end end end elseif aL<=88 then if aL<=86 then aH[aK[1915-(1789+124)]][aH[aK[3]]]=aH[aK[4]]elseif aL==87 then local dn=0;local dp;while true do if dn==0 then dp=aK[2]aH[dp](aH[dp+1])break end end else aH[aK[2]]=ar[aK[3]]end elseif aL<=89 then aH[aK[2]]()elseif aL==90 then local dq=0;local dr;while true do if dq==0 then dr=aK[2]aH[dr]=aH[dr](aH[dr+1])break end end else aH[aK[2]]=as[aK[3]]end;aB=aB+1;break end;if aM==0 then aK=ax[aB]aL=aK[1]aM=1 end end end end end;if at==0 then au=aq[1]av=aq[2]at=1 end end end;return Q(P(),{},D)(...)end;if E==0 then F=1;G=nil;C=q(p(C,5),h("\142\20","\96\160\58\141\88"),function(ds)if n(ds,2)==79 then local dt=0;while true do if dt==0 then G=m(p(ds,1,2-1))return""end end else local du=o(m(ds,45-29))if G then local dv=0;local dw;while true do if dv==1 then return dw end;if 0==dv then dw=r(du,G)G=nil;dv=1 end end else return du end end end)H=nil;E=1 end;if E==3 then function L()local dx=0;local dy;local dz;local dA;local dB;local dC;local dD;while true do if dx==2 then dC=H(dz,21,599-(367+201))dD=H(dz,32)==1 and-1 or 1;dx=3 end;if dx==3 then if dC==0 then if dB==0 then return dD*(927-(214+713))else local dE=0;while true do if dE==0 then dC=1;dA=0;break end end end elseif dC==2047 then return dB==0+0 and dD*1/(0+0)or dD*NaN end;return u(dD,dC-1023)*(dA+dB/2^52)end;if 1==dx then dA=1;dB=H(dz,1,20)*(933-(857+74))^32+dy;dx=2 end;if dx==0 then dy=K()dz=K()dx=1 end end end;M=nil;function M(dF)local dG=0;local dH;local dI;while true do if dG==3 then return s(dI)end;if dG==2 then dI={}for dJ=1,#dH do dI[dJ]=o(n(p(dH,dJ,dJ)))end;dG=3 end;if dG==0 then dH=nil;if not dF then dF=K()if dF==0 then return""end end;dG=1 end;if dG==1 then dH=p(C,F,F+dF-(878-(282+595)))F=F+dF;dG=2 end end end;N=K;E=4 end end endv(),...)
